# The following script will deploy a Laravel 5 applicaion on AWS Elastic Beanstalk.
# Add to .ebextensions at the root of your application and name your commands file (e.g., commands.config)

# -------------------------------- Commands ------------------------------------
# Use "commands" key to execute commands on the EC2 instance. The commands are
# processed in alphabetical order by name, and they run before the application
# and web server are set up and the application version file is extracted.
# ------------------------------------------------------------------------------
commands:
  01-installMongo:
    command: pecl install mongodb
    test: "php -r \"exit(extension_loaded('mongodb') ? 1 : 0);\""
    ignoreErrors: true
  02-updateComposer:
    command: export COMPOSER_HOME=/root && /usr/bin/composer.phar self-update

option_settings:
  - namespace: aws:elasticbeanstalk:application:environment
    option_name: COMPOSER_HOME
    value: /root

  - namespace: aws:elasticbeanstalk:container:php:phpini
    option_name: document_root
    value: /public

  - namespace: aws:elasticbeanstalk:container:php:phpini
    option_name: memory_limit
    value: 512M


container_commands:
  01-express:
    command: "echo AWS Container Commands started, starting Composer install."
  02-installComposer:
    command: "php /opt/elasticbeanstalk/support/composer.phar install"
    cwd: "/var/app/ondeck"
  04-migrations:
    command: "php artisan migrate --env=production --force"
    cwd: "/var/app/ondeck"
  05-express:
    command: "echo Completed Laravel migration, starting Laravel database seeding"
  06-seeds:
    command: "php artisan db:seed --env=production --force"
    cwd: "/var/app/ondeck"
    leader_only: true
  07-express:
    command: "echo Completed database seeting, Container Commands complete."
